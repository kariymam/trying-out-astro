---
import site from '../data/site.json';
---

<footer id="main-footer" class="w-full py-8">
    <div class="wrapper grid grid-cols-1 md:grid-cols-3 max-w-screen-lg mx-auto">
        <div class="time col-span-1 my-1 px-4 opacity-65">
            <p>Local Time in Atlanta, GA is <time id="local-time"></time></p>
        </div>
        <div class="contact-info--wrapper pb-2 rounded-xl flex flex-col col-span-2 w-full transition-all">
            <div class="flex items-center rounded-xl w-full px-4">
                <svg xmlns="http://www.w3.org/2000/svg" class="mx-1 opacity-65" height="20px" viewBox="0 -960 960 960" width="24px"><path d="M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z"/></svg>
                <p id="anima-search" class="typewriter opacity-65 h-6 pl-2 my-1">Find me on...</p><span class="cursor w-[2px] h-6 border-l-2"></span>
            </div>
            <ul id="contact-info" class="mt-1 flex flex-col gap-2">
                <li class="footer--link flex rounded-xl items-center px-4 gap-2 h-10 py-1 hover:bg-[var(--secondary-color)]">
                    <span class="border-2 rounded-full h-full w-9">
                        <img src="/linkedin.svg" alt="LinkedIn Logo" class="ionicon m-auto h-full w-5">
                    </span>
                    <div class="flex ml-[2px] w-full items-center">
                        <a href={ site.author.linkedin }>/kariymamurphy</a>
                        <p class="text-xs -mt-[1px] ml-auto">LinkedIn</p>
                    </div>
                </li>
                <li class="footer--link flex rounded-xl items-center px-4 gap-2 h-10 py-1 hover:bg-[var(--secondary-color)]">
                    <span class="border-2 rounded-full h-full w-9">
                        <img src="/github.svg" alt="Github Logo" class="ionicon m-auto h-full w-5">
                    </span>
                    <div class="flex ml-[2px] w-full items-center">
                        <a href={ site.author.github }>/kariymam</a>
                        <p class="text-xs -mt-[1px] ml-auto">Github</p>
                    </div>
                </li>
                <li class="footer--link flex rounded-xl items-center px-4 gap-2 h-10 py-1 hover:bg-[var(--secondary-color)]">
                    <span class="border-2 rounded-full h-full w-9">
                        <img src="/github.svg" alt="Github Logo" class="ionicon m-auto h-full w-5">
                    </span>
                    <div class="flex ml-[2px] w-full items-center">
                        <a href={ site.author.github }>kariyma@proton.me</a>
                        <p class="text-xs -mt-[1px] ml-auto">Email</p>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</footer>
<script>
    import { gsap } from "gsap";
    import { TextPlugin } from "gsap/TextPlugin";

    const animaSearch = document.getElementById("anima-search");
    const typewriter = (el) => {
        const footerLinks = document.querySelectorAll('.footer--link');
        if (!animaSearch || window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
            return 
        } else {
            const input = el.innerText;
            gsap.registerPlugin(TextPlugin)
        
            // fade-in links
            const fadeInLinks = (arr: any[] | NodeListOf<Element>) => {
                let tl = gsap.timeline();
                arr.forEach((link: gsap.TweenTarget) => {
                    tl.fromTo(link, { opacity: 0, x: 20 }, {
                        delay: 0.1,
                        duration: 0.5,
                        x: 0,
                        opacity: 1,
                        stagger: 0.1,
                        onComplete: function () {
                            gsap.set(this.targets(), { clearProps: "all" });
                        }
                    });
                });
                return tl;
            };
        
            // typewriter
            const getChar = (str) => {
                let tl = gsap.timeline();
                tl.to(el, { text: `${str}`, duration: 1, ease: 'power1.inOut'});
                return tl;
            }
        
            // master timeline
            let master = gsap.timeline()
                             .add(getChar(input))
                             .add(fadeInLinks(footerLinks), "-=0.5");
            
            
            el.textContent = '';
            return master
        }
    }
    //check if footer is in target
    function createObserver() {
        let observer

        let options = {
            root: document.querySelector("body"),
            rootMargin: "0px",
            threshold: 0.5,
        }

        observer = new IntersectionObserver((callback, options: IntersectionObserver) => {
            if (callback[0].intersectionRatio <= 0) return;
            typewriter(animaSearch);
        });

        observer.observe(document.getElementById("main-footer"), options)
    }; 
    createObserver();


    //time display
    const timeDisplay = document.getElementById("local-time");
    function refreshTime() {
        if (!timeDisplay){
            return
        }
        const dateString = new Date().toLocaleString("en-US", {
            hour: 'numeric',
            minute: 'numeric',
            second: 'numeric',
            hour12: true,
        });
        timeDisplay.innerHTML = dateString;
    }
    setInterval(refreshTime, 1000);

  </script>